from PIL import Image

# Function to encrypt an image by modifying pixel values
def encrypt_image(image_path, output_path, key):
    # Open the image
    img = Image.open(image_path)
    pixels = img.load()  # Load pixel data

    # Encrypt each pixel
    for i in range(img.size[0]):  # Loop over image width
        for j in range(img.size[1]):  # Loop over image height
            r, g, b = pixels[i, j]
            
            # Apply a simple mathematical operation (shift using the key)
            r = (r + key) % 256
            g = (g + key) % 256
            b = (b + key) % 256
            
            # Set the new pixel values
            pixels[i, j] = (r, g, b)

    # Save the encrypted image
    img.save(output_path)
    print(f"Image encrypted and saved as {output_path}")

# Function to decrypt an image by reversing the encryption operation
def decrypt_image(image_path, output_path, key):
    # Open the image
    img = Image.open(image_path)
    pixels = img.load()  # Load pixel data

    # Decrypt each pixel
    for i in range(img.size[0]):  # Loop over image width
        for j in range(img.size[1]):  # Loop over image height
            r, g, b = pixels[i, j]
            
            # Reverse the mathematical operation (subtract the key)
            r = (r - key) % 256
            g = (g - key) % 256
            b = (b - key) % 256
            
            # Set the new pixel values
            pixels[i, j] = (r, g, b)

    # Save the decrypted image
    img.save(output_path)
    print(f"Image decrypted and saved as {output_path}")

# Main function to encrypt or decrypt an image based on user choice
def image_cipher():
    # Ask the user whether to encrypt or decrypt
    action = input("Would you like to (E)ncrypt or (D)ecrypt an image? ").upper()
    
    # Get input for image file path, output file path, and encryption key
    image_path = input("Enter the path to the image file: ")
    output_path = input("Enter the path to save the new image: ")
    key = int(input("Enter an integer key for encryption/decryption: "))

    # Perform encryption or decryption based on user choice
    if action == 'E':
        encrypt_image(image_path, output_path, key)
    elif action == 'D':
        decrypt_image(image_path, output_path, key)
    else:
        print("Invalid choice! Please select 'E' to encrypt or 'D' to decrypt.")

# Run the program
image_cipher()
